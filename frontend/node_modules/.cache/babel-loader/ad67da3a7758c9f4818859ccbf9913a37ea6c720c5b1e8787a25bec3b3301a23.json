{"ast":null,"code":"var _jsxFileName = \"/Users/balon/Desktop/studia 3rok/MERN2/frontend/src/Components/edit-student.component.js\",\n  _s = $RefreshSig$();\n// EditStudent Component for update student data\n\n// Import Modules\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport StudentForm from \"./StudentForm\";\n\n// EditStudent Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditStudent = () => {\n  _s();\n  let params = useParams();\n  let _id = params.id;\n  let navigate = useNavigate();\n  const [formValues, setFormValues] = useState({\n    name: \"\",\n    email: \"\",\n    rollno: \"\"\n  });\n\n  //onSubmit handler\n  const onSubmit = studentObject => {\n    axios.put(\"http://localhost:4000/students/update-student/\" + _id, studentObject).then(res => {\n      if (res.status === 200) {\n        alert(\"Student successfully updated\");\n        navigate(\"/student-list\");\n      } else Promise.reject();\n    }).catch(err => alert(\"Something went wrong\"));\n  };\n\n  // Load data from server and reinitialize student form\n  useEffect(() => {\n    axios.get(\"http://localhost:4000/students/update-student/\" + _id).then(res => {\n      const {\n        name,\n        email,\n        rollno\n      } = res.data;\n      setFormValues({\n        name,\n        email,\n        rollno\n      });\n    }).catch(err => console.log(err));\n  }, [_id]);\n\n  // Return student form\n  return /*#__PURE__*/_jsxDEV(StudentForm, {\n    initialValues: formValues,\n    onSubmit: onSubmit,\n    enableReinitialize: true,\n    children: \"Update Student\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n// Export EditStudent Component\n_s(EditStudent, \"3w2NgE0x+fRClkyn79BQ8/JokXc=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditStudent;\nexport default EditStudent;\nvar _c;\n$RefreshReg$(_c, \"EditStudent\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","StudentForm","EditStudent","params","_id","id","navigate","formValues","setFormValues","name","email","rollno","onSubmit","studentObject","put","then","res","status","alert","Promise","reject","catch","err","get","data","console","log"],"sources":["/Users/balon/Desktop/studia 3rok/MERN2/frontend/src/Components/edit-student.component.js"],"sourcesContent":["// EditStudent Component for update student data\n\n// Import Modules\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport StudentForm from \"./StudentForm\";\n\n// EditStudent Component\nconst EditStudent = () => {\n  let params = useParams();\n  let _id = params.id;\n  let navigate = useNavigate();\n  const [formValues, setFormValues] = useState({\n    name: \"\",\n    email: \"\",\n    rollno: \"\",\n  });\n\n  //onSubmit handler\n  const onSubmit = (studentObject) => {\n    axios\n      .put(\n        \"http://localhost:4000/students/update-student/\" + _id,\n        studentObject\n      )\n      .then((res) => {\n        if (res.status === 200) {\n          alert(\"Student successfully updated\");\n          navigate(\"/student-list\");\n        } else Promise.reject();\n      })\n      .catch((err) => alert(\"Something went wrong\"));\n  };\n\n  // Load data from server and reinitialize student form\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:4000/students/update-student/\" + _id)\n      .then((res) => {\n        const { name, email, rollno } = res.data;\n        setFormValues({ name, email, rollno });\n      })\n      .catch((err) => console.log(err));\n  }, [_id]);\n\n  // Return student form\n  return (\n    <StudentForm\n      initialValues={formValues}\n      onSubmit={onSubmit}\n      enableReinitialize\n    >\n      Update Student\n    </StudentForm>\n  );\n};\n\n// Export EditStudent Component\nexport default EditStudent;\n"],"mappings":";;AAAA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;;AAEvC;AAAA;AACA,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB,IAAIC,MAAM,GAAGL,SAAS,EAAE;EACxB,IAAIM,GAAG,GAAGD,MAAM,CAACE,EAAE;EACnB,IAAIC,QAAQ,GAAGP,WAAW,EAAE;EAC5B,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC;IAC3Ca,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE;EACV,CAAC,CAAC;;EAEF;EACA,MAAMC,QAAQ,GAAIC,aAAa,IAAK;IAClCb,KAAK,CACFc,GAAG,CACF,gDAAgD,GAAGV,GAAG,EACtDS,aAAa,CACd,CACAE,IAAI,CAAEC,GAAG,IAAK;MACb,IAAIA,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;QACtBC,KAAK,CAAC,8BAA8B,CAAC;QACrCZ,QAAQ,CAAC,eAAe,CAAC;MAC3B,CAAC,MAAMa,OAAO,CAACC,MAAM,EAAE;IACzB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKJ,KAAK,CAAC,sBAAsB,CAAC,CAAC;EAClD,CAAC;;EAED;EACArB,SAAS,CAAC,MAAM;IACdG,KAAK,CACFuB,GAAG,CAAC,gDAAgD,GAAGnB,GAAG,CAAC,CAC3DW,IAAI,CAAEC,GAAG,IAAK;MACb,MAAM;QAAEP,IAAI;QAAEC,KAAK;QAAEC;MAAO,CAAC,GAAGK,GAAG,CAACQ,IAAI;MACxChB,aAAa,CAAC;QAAEC,IAAI;QAAEC,KAAK;QAAEC;MAAO,CAAC,CAAC;IACxC,CAAC,CAAC,CACDU,KAAK,CAAEC,GAAG,IAAKG,OAAO,CAACC,GAAG,CAACJ,GAAG,CAAC,CAAC;EACrC,CAAC,EAAE,CAAClB,GAAG,CAAC,CAAC;;EAET;EACA,oBACE,QAAC,WAAW;IACV,aAAa,EAAEG,UAAW;IAC1B,QAAQ,EAAEK,QAAS;IACnB,kBAAkB;IAAA,UACnB;EAED;IAAA;IAAA;IAAA;EAAA,QAAc;AAElB,CAAC;;AAED;AAAA,GAjDMV,WAAW;EAAA,QACFJ,SAAS,EAEPC,WAAW;AAAA;AAAA,KAHtBG,WAAW;AAkDjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}